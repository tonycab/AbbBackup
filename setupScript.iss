
; Script generated by the Inno Setup Script Wizard.
; SEE THE DOCUMENTATION FOR DETAILS ON CREATING INNO SETUP SCRIPT FILES!

#define MyAppName "AbbBackup"
#define MyAppVersion "2.0.0.5"
#define MyAppPublisher "SIIF"
#define MyAppURL "https://www.siif.fr/"
#define MyAppExeName "AbbBackup.exe"
#define MyVsProjectDirectory "..\"
#define MyVsProjectRealeasePath ".\bin\Release\"


[Setup]
; NOTE: The value of AppId uniquely identifies this application. Do not use the same AppId value in installers for other applications.
; (To generate a new GUID, click Tools | Generate GUID inside the IDE.)
AppId={{D012C865-01F3-4146-B798-165C74D20CC1}
AppName={#MyAppName}
AppVersion={#MyAppVersion}
;AppVerName={#MyAppName} {#MyAppVersion}
AppPublisher={#MyAppPublisher}
AppPublisherURL={#MyAppURL}
AppSupportURL={#MyAppURL}
AppUpdatesURL={#MyAppURL}
DefaultDirName={commonpf64}\SiiF\{#MyAppName}
DefaultGroupName={#MyAppName} {#MyAppVersion}
ChangesAssociations=yes
DisableProgramGroupPage=yes
;Uncomment the following line to run in non administrative install mode (install for current user only.)
;PrivilegesRequired=admin
OutputDir=..\Setup
OutputBaseFilename=Setup {#MyAppName} {#MyAppVersion}
Compression=lzma
SolidCompression=yes
WizardStyle=modern
SetupIconFile={#MyVsProjectRealeasePath}Logo.ico
;AlwaysRestart = yes 


[Languages]
Name: "french"; MessagesFile: "compiler:Languages\French.isl"

[Tasks]
Name: "desktopicon"; Description: "{cm:CreateDesktopIcon}"; GroupDescription: "{cm:AdditionalIcons}";
Name: "autostart"; Description: "Démarrage automatique de l'application"; GroupDescription: "Optionnel";


[Files]
; Executables
Source: {#MyVsProjectRealeasePath}{#MyAppExeName}; DestDir: "{app}"; Flags: ignoreversion

; Copy le pc sdk et l'install
Source: PCSDK\PCSDK 2024.4.exe; DestDir: "{app}\PCSDK"; AfterInstall: RunOtherInstaller

;dependancies
Source: {#MyVsProjectRealeasePath}Logo.ico; DestDir: "{app}"; Flags: ignoreversion
Source: {#MyVsProjectRealeasePath}Logo.png; DestDir: "{app}"; Flags: ignoreversion


[Registry]
;Root: HKCR;  Subkey: ".stl";  ValueData: {#MyAppAssocNameViewer}; ValueType: string;  ValueName: "";  Flags: uninsdeletevalue

[Icons]
Name: "{autoprograms}\{#MyAppName}"; Filename: "{app}\{#MyAppExeName}"
;Name: "{autodesktop}\{#MyAppName}"; Filename: "{app}\{#MyAppExeName}"; Tasks: desktopicon; Parameters: "--folder ""%UserProfile%\Desktop"" --delete 360 --timeout 300"
Name: "{autodesktop}\{#MyAppName}"; Filename: "{app}\{#MyAppExeName}"; Tasks: desktopicon; 
Name: "{autodesktop}\{#MyAppName} Add robot"; Filename: "{app}\{#MyAppExeName}"; Tasks: desktopicon; Parameters: "--addconf ";

; ne plus utiliser démarrage appli par dossier startup car droits admin requis ou alors startup appelé avant le logon admin
Name: "{userstartup}\{#MyAppName}"; Filename: "{app}\{#MyAppExeName}"; WorkingDir: "{app}" 

[Code]
procedure RunOtherInstaller;
var
  ResultCode: Integer;
begin
  if not Exec(ExpandConstant('{app}\PCSDK\PCSDK 2024.4.exe'), '', '', SW_SHOWNORMAL,
    ewWaitUntilTerminated, ResultCode)
  then
    MsgBox('Other installer failed to run!' + #13#10 +
      SysErrorMessage(ResultCode), mbError, MB_OK);
end;

//Fenetre pour proposer l'ajout d'une task dans le planificateur
function AddTask(): Boolean;
begin
    Result := (MsgBox('Do you want to add a daily robot backup in the task scheduler ?', mbConfirmation, MB_YESNO) = IDYES); 
end;

 [Run]    
;Filename: "schtasks"; Parameters: "/Create /TN ""AbbBackup"" /TR ""'{app}\{#MyAppExeName}' --folder ""'%UserProfile%\Desktop'""  --delete 365 --timeout 180"" /SC DAILY /ST 10:00";Check: AddTask
Filename: "schtasks"; Parameters: "/Create /TN ""AbbBackup"" /TR ""'{app}\{#MyAppExeName}' --all"" /SC DAILY /ST 10:00";Check: AddTask

Filename: "cmd.exe"; Parameters: "/c setx path ""%path%;{app}"

; Suppression de la task 
[UninstallRun]
Filename: "schtasks"; Parameters: "/Delete /TN ""AbbBackup"" /F"; Flags: runhidden runascurrentuser
